[{"E:\\workspace\\react-admin\\src\\index.js":"1","E:\\workspace\\react-admin\\src\\App.js":"2","E:\\workspace\\react-admin\\src\\pages\\About\\index.js":"3","E:\\workspace\\react-admin\\src\\pages\\Login\\index.js":"4","E:\\workspace\\react-admin\\src\\pages\\Login\\LoginForm.js":"5","E:\\workspace\\react-admin\\src\\pages\\Login\\RegisterForm.js":"6","E:\\workspace\\react-admin\\src\\api\\account.js":"7","E:\\workspace\\react-admin\\src\\utils\\request.js":"8","E:\\workspace\\react-admin\\src\\components\\code\\index.js":"9","E:\\workspace\\react-admin\\src\\utils\\session.js":"10","E:\\workspace\\react-admin\\src\\components\\SecurityRouter\\index.js":"11","E:\\workspace\\react-admin\\src\\router\\index.js":"12","E:\\workspace\\react-admin\\src\\components\\ContentRouter\\index.js":"13","E:\\workspace\\react-admin\\src\\pages\\System\\Dept\\index.js":"14","E:\\workspace\\react-admin\\src\\pages\\System\\User\\index.js":"15","E:\\workspace\\react-admin\\src\\pages\\Workspace\\index.js":"16","E:\\workspace\\react-admin\\src\\pages\\Workspace\\components\\Aside.js":"17","E:\\workspace\\react-admin\\src\\pages\\Workspace\\components\\Header.js":"18","E:\\workspace\\react-admin\\src\\pages\\Workspace\\components\\MainContent.js":"19","E:\\workspace\\react-admin\\src\\store\\index.js":"20","E:\\workspace\\react-admin\\src\\store\\reducer\\global.js":"21","E:\\workspace\\react-admin\\src\\store\\reducer\\user.js":"22","E:\\workspace\\react-admin\\src\\store\\reducer\\dept.js":"23","E:\\workspace\\react-admin\\src\\store\\Type.js":"24","E:\\workspace\\react-admin\\src\\store\\action\\global.js":"25"},{"size":158,"mtime":1610801978817,"results":"26","hashOfConfig":"27"},{"size":815,"mtime":1610724862059,"results":"28","hashOfConfig":"27"},{"size":220,"mtime":1609469272901,"results":"29","hashOfConfig":"27"},{"size":847,"mtime":1609588579860,"results":"30","hashOfConfig":"27"},{"size":4234,"mtime":1610809353698,"results":"31","hashOfConfig":"27"},{"size":4730,"mtime":1609769176029,"results":"32","hashOfConfig":"27"},{"size":610,"mtime":1609767019412,"results":"33","hashOfConfig":"27"},{"size":683,"mtime":1609646095169,"results":"34","hashOfConfig":"27"},{"size":2766,"mtime":1609768778425,"results":"35","hashOfConfig":"27"},{"size":284,"mtime":1609845868461,"results":"36","hashOfConfig":"27"},{"size":424,"mtime":1609845613929,"results":"37","hashOfConfig":"27"},{"size":1987,"mtime":1610631620558,"results":"38","hashOfConfig":"27"},{"size":1290,"mtime":1610721790361,"results":"39","hashOfConfig":"27"},{"size":221,"mtime":1610032060516,"results":"40","hashOfConfig":"27"},{"size":877,"mtime":1610809889008,"results":"41","hashOfConfig":"27"},{"size":1594,"mtime":1610635907508,"results":"42","hashOfConfig":"27"},{"size":3285,"mtime":1610631481929,"results":"43","hashOfConfig":"27"},{"size":0,"mtime":1609772526011,"results":"44","hashOfConfig":"27"},{"size":294,"mtime":1610635983745,"results":"45","hashOfConfig":"27"},{"size":441,"mtime":1610723402823,"results":"46","hashOfConfig":"27"},{"size":518,"mtime":1610809416511,"results":"47","hashOfConfig":"27"},{"size":124,"mtime":1610722846943,"results":"48","hashOfConfig":"27"},{"size":122,"mtime":1610722851149,"results":"49","hashOfConfig":"27"},{"size":41,"mtime":1610807660271,"results":"50","hashOfConfig":"27"},{"size":214,"mtime":1610809406123,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"14c9oag",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\workspace\\react-admin\\src\\index.js",[],["108","109"],"E:\\workspace\\react-admin\\src\\App.js",[],"E:\\workspace\\react-admin\\src\\pages\\About\\index.js",[],"E:\\workspace\\react-admin\\src\\pages\\Login\\index.js",["110"],"import react, { Component } from \"react\";\r\nimport \"./index.scss\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport RegisterForm from \"./RegisterForm\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            formType: 'login'\r\n        };\r\n    }\r\n\r\n    toggleForm = (type) => {\r\n        this.setState({\r\n            formType: type\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-wrap\">\r\n                <div>\r\n                    { \r\n                        this.state.formType === 'login' \r\n                        ? <LoginForm toggleForm={ this.toggleForm } /> \r\n                        : <RegisterForm toggleForm={ this.toggleForm } /> \r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    } \r\n\r\n}\r\n\r\nexport default Login;","E:\\workspace\\react-admin\\src\\pages\\Login\\LoginForm.js",["111","112"],"E:\\workspace\\react-admin\\src\\pages\\Login\\RegisterForm.js",["113","114"],"import react, { Component, Fragment } from \"react\";\r\nimport { Form, Input, Button, Row, Col, message } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport Code from \"../../components/code\";\r\nimport { Register } from \"../../api/account\";\r\nimport CryptoJS from \"crypto-js\";\r\n\r\nclass RegisterForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            module: 'register'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 注册\r\n     * @param {*} values \r\n     */\r\n    onFinish = (values) => {\r\n        values.password = CryptoJS.MD5(values.password).toString();\r\n        Register(values).then(response => {\r\n            message.success(response.data.message);\r\n            if(response.data.resCode == 0) {\r\n                this.toggleForm();\r\n            }\r\n        }).catch(error => {\r\n            message.error(error.data.message);\r\n        });\r\n    }\r\n\r\n     /**\r\n     * 输入change事件\r\n     * @param {*} e \r\n     */\r\n    inputChange = (e) => {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    } \r\n\r\n    toggleForm = ()=> {\r\n        this.props.toggleForm('login');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div className=\"form-header\">\r\n                    <h4>注册</h4>\r\n                    <span onClick={ this.toggleForm }>登录</span>\r\n                </div>\r\n                <div className=\"form-content\">\r\n                <Form\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    onFinish={this.onFinish}\r\n                >\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        rules={[\r\n                            { required: true, message: '请输入邮箱!', }, \r\n                            { type: 'email', message: '请输入正确的邮箱!',},\r\n                    ]}\r\n                    >\r\n                        <Input onChange={this.inputChange} prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"请输入邮箱\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[{ required: true, message: '请输入密码!', },]}\r\n                    >\r\n                        <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"请输入密码\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"repassword\"\r\n                        rules={\r\n                            [\r\n                                { required: true, message: '请输入密码!'},\r\n                                ({ getFieldValue }) => ({\r\n                                    validator(rule, value) {\r\n                                      if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                      }\r\n                        \r\n                                      return Promise.reject('两次密码不一致!');\r\n                                    },\r\n                                  }),\r\n                            ]\r\n                        }\r\n                    >\r\n                        <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"请再次输入密码\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"code\"\r\n                        rules={\r\n                            [\r\n                                { required: true, message: '请输入验证码!'},\r\n                            ]\r\n                        }\r\n                    >\r\n                        <Row gutter={6}>\r\n                            <Col span={16}>\r\n                                <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"请输入验证码\" />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Code username={ this.state.username } module={this.state.module} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" block>注册</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    } \r\n\r\n}\r\n\r\nexport default RegisterForm;","E:\\workspace\\react-admin\\src\\api\\account.js",[],"E:\\workspace\\react-admin\\src\\utils\\request.js",[],"E:\\workspace\\react-admin\\src\\components\\code\\index.js",["115","116"],"import react, { Component } from \"react\";\r\nimport { Button, message } from 'antd';\r\nimport { GetSms } from \"../../api/account\";\r\n\r\n//定时器\r\nlet timer = null;\r\n\r\n//Class组件\r\nclass Code extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            buttonDisabled: false,\r\n            codeText: '获取验证码',\r\n            username: '',\r\n            module: props.module\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 将要接受父组件传来的props\r\n     * @param {*} param\r\n     */\r\n    componentWillReceiveProps({ username }) {\r\n        this.setState({ username })\r\n    }\r\n\r\n    /**\r\n     * 组件销毁前处理事件\r\n     */\r\n    componentWillUnmount() {\r\n        //清除定时器\r\n        clearInterval(timer);\r\n    }\r\n\r\n     /**\r\n     * 倒计时\r\n     */\r\n    countDowm = () => {\r\n        let second = 60;\r\n\r\n        this.setState({\r\n            loading: false,\r\n            buttonDisabled: true,\r\n            codeText: `${second}S`,\r\n        })\r\n\r\n        timer = setInterval(()=>{\r\n            second--;\r\n\r\n            if(second <= 0) {\r\n                this.setState({\r\n                    buttonDisabled: false,\r\n                    codeText: '重新获取',\r\n                });\r\n                clearInterval(timer);\r\n                return false;\r\n            }\r\n\r\n            this.setState({\r\n                buttonDisabled: true,\r\n                codeText: `${second}S`,\r\n            })\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取验证码\r\n     */\r\n    getCode =() => {\r\n        let username = this.state.username;\r\n        if(!username) {\r\n            message.warning('请输入用户名', 1);\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            loading: true,\r\n            codeText: '发送中'\r\n        });\r\n\r\n        let params = {\r\n            username,\r\n            module: this.state.module\r\n        };\r\n\r\n        GetSms(params).then(response => {\r\n            if(response.data.resCode == 0) {\r\n                message.success(response.data.message);\r\n                this.countDowm();\r\n            } else {\r\n                this.setState({\r\n                    loading: false,\r\n                    buttonDisabled: false,\r\n                    codeText: '重新获取'\r\n                });\r\n            }\r\n        }).catch(error => {\r\n            this.setState({\r\n                loading: false,\r\n                buttonDisabled: false,\r\n                codeText: '重新获取'\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Button type=\"danger\" disabled={this.state.buttonDisabled} loading={this.state.loading} onClick={this.getCode} block>{this.state.codeText}</Button>\r\n    }\r\n\r\n}\r\n\r\nexport default Code;","E:\\workspace\\react-admin\\src\\utils\\session.js",[],"E:\\workspace\\react-admin\\src\\components\\SecurityRouter\\index.js",[],"E:\\workspace\\react-admin\\src\\router\\index.js",[],"E:\\workspace\\react-admin\\src\\components\\ContentRouter\\index.js",["117","118"],"import React, { Component } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport SecurityRouter from \"../SecurityRouter\";\r\n\r\n//自动化工程\r\n//第一个参数：目录\r\n//第二个参数：是否查找子目录\r\n//第三个参数：查找文件类型\r\nconst files = require.context(\"../../pages\", true, /\\.js$/);\r\n\r\nconst components = [];\r\nfiles.keys().map(key => {\r\n  if(key.toLowerCase().includes('./workspace/') || key.toLowerCase().includes('./login/')) {\r\n    return false;\r\n  }\r\n\r\n  const splits = key.split('.');\r\n  const pathTmp = splits[1].toLowerCase();\r\n  \r\n  let path = pathTmp;\r\n  if(pathTmp.indexOf('/index') != -1) {\r\n    let index = pathTmp.indexOf('/index');\r\n    path = `/workspace${pathTmp.substring(0, index)}`;\r\n  }\r\n\r\n  const component = files(key).default;\r\n  \r\n  components.push({\r\n    path: path,\r\n    component: component\r\n  });\r\n});\r\nclass ContentRouter extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {}\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Switch>\r\n          {\r\n            components.map(item => {\r\n                return <SecurityRouter exact key={item.path} path={item.path} component={item.component} />\r\n            })\r\n          }\r\n        </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContentRouter;\r\n","E:\\workspace\\react-admin\\src\\pages\\System\\Dept\\index.js",[],"E:\\workspace\\react-admin\\src\\pages\\System\\User\\index.js",[],"E:\\workspace\\react-admin\\src\\pages\\Workspace\\index.js",[],"E:\\workspace\\react-admin\\src\\pages\\Workspace\\components\\Aside.js",["119"],"import React, { Component, Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Menu } from 'antd';\r\nimport \"./Aside.scss\";\r\n\r\nimport Router from \"@/router\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass Aside extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            openKeys: [], //当前展开的 SubMenu 菜单项 key 数组\r\n            selectedKeys: []  //当前选中的菜单项 key 数组\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 组件渲染后执行\r\n     */\r\n    componentDidMount() {\r\n        //获取路由\r\n        var pathname = this.props.location.pathname;\r\n        //获取当前所在的目录层级\r\n        const rank = pathname.split('/');\r\n        //rank = [\"\",\"policy-engine\",\"nas-client\"]\r\n        switch (rank.length) {\r\n            case 2:  //一级目录\r\n                this.setState({\r\n                    selectedKeys: [pathname]\r\n                })\r\n                break;\r\n            case 4: //二级目录，要展开一个subMenu\r\n                this.setState({\r\n                    selectedKeys: [pathname],\r\n                    openKeys: [rank.slice(0, 3).join('/')]\r\n                })\r\n                break;\r\n            case 5: //三级目录，要展开两个subMenu\r\n                this.setState({\r\n                    selectedKeys: [pathname],\r\n                    openKeys: [rank.slice(0, 3).join('/'), rank.slice(0, 4).join('/')]\r\n                })\r\n                break; \r\n        }\r\n    }\r\n\r\n    /**\r\n     * 渲染Menu\r\n     */\r\n    renderMenu = ({title, key, path}) => {\r\n        return <Menu.Item key={ key }> <Link to={ path }>{ title }</Link></Menu.Item>\r\n    }\r\n\r\n    /**\r\n     * 渲染SubMenu\r\n     */\r\n    renderSubMenu = ({title, key, children}) => {\r\n        return (\r\n            <SubMenu key={ key } title={ title }>\r\n                {\r\n                   children && children.map(item => {\r\n                        return item.children && item.children.length > 0 ? this.renderSubMenu(item) : this.renderMenu(item);\r\n                   })\r\n                }\r\n            </SubMenu>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 点击 MenuItem\r\n     * @param {*} param0 \r\n     */\r\n    onMenuSelect = ({ item, key, keyPath, domEvent }) => {\r\n        this.setState({\r\n            selectedKeys: [key],\r\n            openKeys: keyPath.slice(1)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 展开/关闭 触发\r\n     */\r\n    onOpenChange = (openKeys) => {\r\n        this.setState({openKeys})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Fragment>\r\n                <div className=\"logo\" />\r\n                <Menu theme=\"dark\" \r\n                    onOpenChange={this.onOpenChange}\r\n                    onClick={this.onMenuSelect}\r\n                    selectedKeys={ this.state.selectedKeys } \r\n                    openKeys={ this.state.openKeys }\r\n                    mode=\"inline\"\r\n                >\r\n                   {\r\n                       Router && Router.map(item => {\r\n                            return item.children && item.children.length > 0 ? this.renderSubMenu(item) : this.renderMenu(item);\r\n                       })\r\n                   }\r\n                </Menu>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(Aside);","E:\\workspace\\react-admin\\src\\pages\\Workspace\\components\\Header.js",[],"E:\\workspace\\react-admin\\src\\pages\\Workspace\\components\\MainContent.js",[],"E:\\workspace\\react-admin\\src\\store\\index.js",[],"E:\\workspace\\react-admin\\src\\store\\reducer\\global.js",[],"E:\\workspace\\react-admin\\src\\store\\reducer\\user.js",[],"E:\\workspace\\react-admin\\src\\store\\reducer\\dept.js",[],"E:\\workspace\\react-admin\\src\\store\\Type.js",[],"E:\\workspace\\react-admin\\src\\store\\action\\global.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":13},{"ruleId":"124","severity":1,"message":"125","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":36,"column":35,"nodeType":"130","messageId":"131","endLine":36,"endColumn":37},{"ruleId":"124","severity":1,"message":"125","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":25,"column":38,"nodeType":"130","messageId":"131","endLine":25,"endColumn":40},{"ruleId":"124","severity":1,"message":"125","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":90,"column":38,"nodeType":"130","messageId":"131","endLine":90,"endColumn":40},{"ruleId":"132","severity":1,"message":"133","line":12,"column":22,"nodeType":"134","messageId":"135","endLine":12,"endColumn":24},{"ruleId":"128","severity":1,"message":"136","line":21,"column":32,"nodeType":"130","messageId":"131","endLine":21,"endColumn":34},{"ruleId":"137","severity":1,"message":"138","line":28,"column":9,"nodeType":"139","messageId":"140","endLine":46,"endColumn":10},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]